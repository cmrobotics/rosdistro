version: 2.1

workflows:
  on_commit:
    jobs:
      - validate_merge
      - merge_and_push:
          filters:
            branches:
              only: cmr
      - generate_rosdistro_cache:
          requires:
            - merge_and_push
          filters:
            branches:
              only: cmr
      - update_rosdistro_cache:
          requires:
            - generate_rosdistro_cache
          filters:
            branches:
              only: cmr

  nightly:
    triggers:
      - schedule:
          cron: "0 8 * * *"
          filters:
            branches:
              only: cmr
    jobs:
      - validate_merge
      - merge_and_push:
          filters:
            branches:
              only: cmr
      - generate_rosdistro_cache:
          requires:
            - merge_and_push
          filters:
            branches:
              only: cmr
      - update_rosdistro_cache:
          requires:
            - generate_rosdistro_cache
          filters:
            branches:
              only: cmr


jobs:
  validate_merge:
    docker:
      - image: ubuntu:focal
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update -y
            apt install git -y
      - run:
          name: Validate that it is possible to sync with the upstream repo
          command: |
            # Make sure to purge all the password as soon as possible and only store them in memory
            git config credential.helper 'cache --timeout=120'
            git config user.email "91249588+LotzBot@users.noreply.github.com"
            git config user.name "LotzBot"
            git remote add upstream https://github.com/ros/rosdistro
            git fetch upstream master
            git checkout -b update/bot-updating
            git merge --commit --no-edit upstream/master

  merge_and_push:
    docker:
      - image: ubuntu:focal
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update -y
            apt install git -y
      - run:
          name: Sync with the upstream repo and push
          command: |
            # Make sure to purge all the password as soon as possible and only store them in memory
            git config credential.helper 'cache --timeout=120'
            git config user.email "91249588+LotzBot@users.noreply.github.com"
            git config user.name "LotzBot"
            git remote add upstream https://github.com/ros/rosdistro
            git fetch upstream master
            git checkout -b update/bot-updating
            git merge --commit --no-edit upstream/master
            # Push quitely to prevent showing the token in the log
            git push -q https://${GITHUB_BOT_TOKEN}@github.com/cmrobotics/rosdistro cmr

  generate_rosdistro_cache:
    docker:
      - image: ubuntu:focal
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            ln -fs /usr/share/zoneinfo/Europe/Copenhagen /etc/localtime
            DEBIAN_FRONTEND=noninteractive apt update -y && apt install -y --no-install-recommends tzdata
            apt install git -y
            apt install python3-rosdistro -y
      - run:
          name: Produce the cache
          command: |
            curl -u LotzBot:${GITHUB_BOT_TOKEN} https://api.github.com/user
            rosdistro_build_cache --include-source ./index.yaml
      - store_artifacts: # Store the files as artifacts in case someone wants to download them later
          path: ./foxy-cache.yaml.gz
      - save_cache: # Store the files in the cache to use in other steps
          key: images_to_upload
          paths:
            - ./foxy-cache.yaml

  update_rosdistro_cache:
    docker:
      - image: ubuntu:focal
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update -y
            apt instsall curl -y
      - restore_cache: # Restores the cached files
          key: images_to_upload
      - run:
          name: Push the cache to GitHub
          command: ./push_cache.sh ${GITHUB_BOT_TOKEN} ./foxy-cache.yaml.gz
